{
  "openapi": "3.0.0",
  "info": {
    "title": "TokenX API",
    "description": "API for creating token websites",
    "version": "1.0.0"
  },
  "paths": {
    "/api/website": {
      "post": {
        "summary": "Create a Token Website",
        "description": "This endpoint allows users to create a token website by providing essential details like token name, ticker, and subdomain. The API will generate a website and return a URL, an edit link, and user details.",
        "operationId": "createWebsite",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the token"
                  },
                  "ticker": {
                    "type": "string",
                    "description": "Token ticker (e.g., MTK)"
                  },
                  "subdomain": {
                    "type": "string",
                    "description": "Desired subdomain (e.g., `mytoken` â†’ `https://mytoken.x.tokenx.site`). If taken, the system will adjust by appending ticker, name, or random characters"
                  },
                  "userWallet": {
                    "type": "string",
                    "description": "Wallet address of the user"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary",
                    "description": "Token logo image (multipart file upload)"
                  },
                  "twitter": {
                    "type": "string",
                    "description": "Twitter profile link"
                  },
                  "telegram": {
                    "type": "string",
                    "description": "Telegram group link"
                  },
                  "description": {
                    "type": "string",
                    "description": "Token description"
                  },
                  "contract": {
                    "type": "string",
                    "description": "Contract address (if applicable)"
                  },
                  "template": {
                    "type": "string",
                    "description": "Template ID for the website. Available options: \nðŸ”¹ (Default) Original â†’ \"Y9zdHtTUz6GRCDmSWwvO\" \nðŸ”¹ Minimal â†’ \"PdBB8aLHavp5xzwD1vqs\""
                  }
                },
                "required": ["name", "ticker", "subdomain", "userWallet", "image"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Website created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Website created successfully"
                    },
                    "siteId": {
                      "type": "string",
                      "example": "YK4N0bTPipmuEXwZK65R"
                    },
                    "url": {
                      "type": "string",
                      "example": "https://mtk.x.tokenx.site"
                    },
                    "editLink": {
                      "type": "string",
                      "example": "https://www.tokenx.site/design?id=YK4N0bTPipmuEXwZK65R"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "userId": {
                          "type": "string",
                          "example": "6uRVp5sxyPg57mPxEWS492vQV17UpXY6ikTHBYe27mf"
                        },
                        "walletAddress": {
                          "type": "string",
                          "example": "6uRVp5sxyPg57mPxEWS492vQV17UpXY6ikTHBYe27mf"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - Missing required fields"
          },
          "500": {
            "description": "Internal Server Error - Unexpected failure"
          }
        }
      }
    }
  }
}
